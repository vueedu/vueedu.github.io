{"pageProps":{"data":{"id":1234,"clientId":"450","clientName":null,"courseId":"102","typeId":"5","isSpecail":0,"title":"Rust编程语言高级进阶班","type":3,"coverUrl":"https://ssl.cdn.maodouketang.com/FhSdmqE-iaCls0i6EEZFzM7sjhRR","teacher":"","startAt":null,"location":"北京","info":"{\"title\":\"Rust语言高级进阶班课程\",\"desc\":\"Rust编程语言高级进阶班，选用孙飞老师编著的 《Rust语言圣经》 course.rs 为理论教程，practice.rs 作为配套实战练习，适合学过基础入门课的学员进阶提高。学习时间共3周，其中第一周侧重基础入门的查漏补缺，第二周侧重高级进阶的知识讲解，第三周侧重链表实现和项目案例分析。每周三/周六/周日的晚上8点准时上课。\",\"qrcodeTitle\":\"课程咨询微信：limingth\",\"qrcodeTitleLink\":\"https://rustedu.com/course/102\",\"qrcodeURL\":\"https://maodou-courseware-1257797626.cos.ap-beijing.myqcloud.com/origin/100450102/limingth.png\", \"mainScreenBgUrl\":\"\",\"mainScreenQrUrl\":\"\"}","buyersCount":null,"price":"900","tag":"hot","totalNum":null,"createdAt":null,"updatedAt":null,"roomId":"100450102","isDelete":1,"courseIndex":2,"oldPrice":"900","ishd":240,"status":null,"summary":"选用孙飞老师编著的 《Rust语言圣经》 course.rs 的高级进阶部分为理论教程，practice.rs 作为配套实战练习，适合入门后的进阶学习","showqr":null,"introduction":"<p><span class=\"ql-size-large\">Rust编程语言高级进阶班，选用</span><a href=\"https://www.zhihu.com/people/iSunface\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\">孙飞老师</a><span class=\"ql-size-large\">编著的 </span><a href=\"https://course.rs/\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\">《Rust语言圣经》 course.rs&nbsp;</a><span class=\"ql-size-large\">为理论教程，</span><a href=\"https://zh.practice.rs/\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\">practice.rs </a><span class=\"ql-size-large\">作为配套实战练习，适合学过基础入门课的学员进阶提高。</span></p><p><br></p><p><strong class=\"ql-size-large\">学习目标和要求：</strong></p><p><span class=\"ql-size-large\">1. 完成教材 </span><a href=\"https://course.rs/advance/intro.html\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\">《Rust高级进阶》</a><span class=\"ql-size-large\"> 第三章节共11个小节的理论学习</span></p><p><span class=\"ql-size-large\">2. 完成 practice.rs 上的对应配套练习编程</span></p><p><span class=\"ql-size-large\">3. 完成教材</span><a href=\"https://course.rs/too-many-lists/intro.html\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\">《手把手带你实现链表》</a><span class=\"ql-size-large\">的代码编写/调试/运行</span></p><p><br></p><p><strong class=\"ql-size-large\">学习时间安排：</strong></p><p><span class=\"ql-size-large\">1. 每周三/周六/周日的晚上8点-10点，是正常的上课时间，没有特殊情况要求都能参加。</span></p><p><span class=\"ql-size-large\">2. 在完成对应章节的理论知识学习后，需要完成配套编程练习，小组讨论会将侧重知识的答疑解惑和所写的代码演示。</span></p><p><span class=\"ql-size-large\">3. 学习时间共3周，其中第一周侧重基础入门的查漏补缺，第二周侧重高级进阶的知识讲解，第三周侧重链表实现和项目案例分析。</span></p><p><br></p><p><strong class=\"ql-size-large\">报名费用说明：</strong></p><p><span class=\"ql-size-large\">1. 课程学费900元，包含3周共9次班级小组讨论和解惑答疑。</span></p><p><span class=\"ql-size-large\">2. 从缴费之日起，四周内完成学习目标和要求的学员，学费可</span><span class=\"ql-size-large\" style=\"color: rgb(0, 0, 0);\">作为奖学金</span><span class=\"ql-size-large\">全额退回。</span></p><p><span class=\"ql-size-large\">3. 报名缴费后，中途如果放弃学习，则已经发生的课次按每次100元收费，剩余费用退还。</span></p><p><span class=\"ql-size-large\">4. 如果超过四周仍没有完成课程的学习目标和要求，则学费不予退还。</span></p><p><br></p><p><br></p><h3><span class=\"ql-size-large\">内容大纲</span></h3><p><br></p><p><strong class=\"ql-size-large\">Rust 高级进阶</strong></p><p><span class=\"ql-size-large\">3.1. 生命周期</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.1.1. 认识生命周期</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.1.2. 深入生命周期</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.1.3. &amp;'static 和 T: 'static</span></p><p><span class=\"ql-size-large\">3.2. 函数式编程: 闭包、迭代器</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.2.1. 闭包 Closure</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.2.2. 迭代器 Iterator</span></p><p><span class=\"ql-size-large\">3.3. 深入类型</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.3.1. newtype 和 类型别名</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.3.2. Sized 和不定长类型 DST</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.3.3. 枚举和整数</span></p><p><span class=\"ql-size-large\">3.4. 智能指针</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.4.1. Box堆对象分配</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.4.2. Deref 解引用</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.4.3. Drop 释放资源</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.4.4. Rc 与 Arc 实现 1vN 所有权机制</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.4.5. Cell 与 RefCell 内部可变性</span></p><p><span class=\"ql-size-large\">3.5. 循环引用与自引用</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.5.1. Weak 与循环引用</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.5.2. 结构体中的自引用</span></p><p><span class=\"ql-size-large\">3.6. 多线程并发编程</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.6.1. 并发和并行</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.6.2. 使用多线程</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.6.3. 线程同步：消息传递</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.6.4. 线程同步：锁、Condvar 和信号量</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.6.5. 线程同步：Atomic 原子操作与内存顺序</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.6.6. 基于 Send 和 Sync 的线程安全</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.6.7. 实践应用：多线程 Web 服务器 todo</span></p><p><span class=\"ql-size-large\">3.7. 全局变量</span></p><p><span class=\"ql-size-large\">3.8. 错误处理</span></p><p><span class=\"ql-size-large\">3.9. Unsafe Rust</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.9.1. 五种兵器</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.9.2. 内联汇编 todo</span></p><p><span class=\"ql-size-large\">3.10. Macro 宏编程</span></p><p><span class=\"ql-size-large\">3.11. 易混淆概念解析</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.11.1. 切片和切片引用</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.11.2. Eq 和 PartialEq</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.11.3. String、&amp;str 和 str todo</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.11.4. 裸指针、引用和智能指针 todo</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.11.5. 作用域、生命周期和 NLL todo</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">3.11.6. move、Copy 和 Clone todo</span></p><p><br></p><p><strong class=\"ql-size-large\">手把手带你实现链表</strong></p><p><span class=\"ql-size-large\">8.1. 我们到底需不需要链表</span></p><p><span class=\"ql-size-large\">8.2. 不太优秀的单向链表：栈</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.2.1. 数据布局</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.2.2. 基本操作</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.2.3. 最后实现</span></p><p><span class=\"ql-size-large\">8.3. 还可以的单向链表</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.3.1. 优化类型定义</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.3.2. 定义 Peek 函数</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.3.3. IntoIter 和 Iter</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.3.4. IterMut以及完整代码</span></p><p><span class=\"ql-size-large\">8.4. 持久化单向链表</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.4.1. 数据布局和基本操作</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.4.2. Drop、Arc 及完整代码</span></p><p><span class=\"ql-size-large\">8.5. 不咋样的双端队列</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.5.1. 数据布局和基本操作</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.5.2. Peek</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.5.3. 基本操作的对称镜像</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.5.4. 迭代器</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.5.5. 最终代码</span></p><p><span class=\"ql-size-large\">8.6. 不错的unsafe队列</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.6.1. 数据布局</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.6.2. 基本操作</span></p><p class=\"ql-indent-1\"><span class=\"ql-size-large\">8.6.3. Miri</span></p>","applyCount":null,"linkUrl":null,"gradeLevel":null,"courseClasss":null}},"__N_SSG":true}