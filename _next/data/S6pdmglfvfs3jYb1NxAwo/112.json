{"pageProps":{"data":{"id":1259,"clientId":"450","clientName":null,"courseId":"112","typeId":"5","isSpecail":0,"title":"Rust常用库最佳实践高级实验班","type":6,"coverUrl":"https://ssl.cdn.maodouketang.com/FnVdpJBZ4p_ve3oMT0NJ-ZVzr3Wy","teacher":"","startAt":null,"location":"北京","info":"Rust常用库之最佳实践高级实验班","buyersCount":null,"price":"1800","tag":"hot","totalNum":null,"createdAt":null,"updatedAt":null,"roomId":"100450112","isDelete":1,"courseIndex":12,"oldPrice":"0","ishd":240,"status":null,"summary":"精心挑选了一些非常适合日常开发使用的三方库，同时针对优缺点、社区活跃等进行了评价，同一个类别的库，按照推荐度优先级降序排列","showqr":null,"introduction":"<h2><a href=\"https://course.rs/practice/third-party-libs.html#%E7%9B%AE%E5%BD%95\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">目录</a></h2><ul><li><span class=\"ql-size-large\">日常开发常用的Rust库:</span></li><li class=\"ql-indent-1\"><a href=\"https://course.rs/practice/third-party-libs.html#webhttp\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">Web/HTTP</a><span class=\"ql-size-large\">,&nbsp;</span><a href=\"https://course.rs/practice/third-party-libs.html#SQL%E5%AE%A2%E6%88%B7%E7%AB%AF\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">SQL客户端</a><span class=\"ql-size-large\">,&nbsp;</span><a href=\"https://course.rs/practice/third-party-libs.html#NoSql%E5%AE%A2%E6%88%B7%E7%AB%AF\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">NoSql客户端</a><span class=\"ql-size-large\">，&nbsp;</span><a href=\"https://course.rs/practice/third-party-libs.html#%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">网络通信协议</a><span class=\"ql-size-large\">,&nbsp;</span><a href=\"https://course.rs/practice/third-party-libs.html#%E5%BC%82%E6%AD%A5%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">异步网络编程</a></li><li class=\"ql-indent-1\"><a href=\"https://course.rs/practice/third-party-libs.html#%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">服务发现</a><span class=\"ql-size-large\">,&nbsp;</span><a href=\"https://course.rs/practice/third-party-libs.html#%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">消息队列</a><span class=\"ql-size-large\">,&nbsp;</span><a href=\"https://course.rs/practice/third-party-libs.html#%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">搜索引擎</a></li><li class=\"ql-indent-1\"><a href=\"https://course.rs/practice/third-party-libs.html#%E7%BC%96%E8%A7%A3%E7%A0%81\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">编解码</a><span class=\"ql-size-large\">,&nbsp;</span><a href=\"https://course.rs/practice/third-party-libs.html#Email\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">Email</a><span class=\"ql-size-large\">,&nbsp;</span><a href=\"https://course.rs/practice/third-party-libs.html#%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E6%A8%A1%E7%89%88\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">常用正则模版</a></li><li class=\"ql-indent-1\"><a href=\"https://course.rs/practice/third-party-libs.html#%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">日志监控</a><span class=\"ql-size-large\">,&nbsp;</span><a href=\"https://course.rs/practice/third-party-libs.html#%E4%BB%A3%E7%A0%81Debug\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">代码Debug</a><span class=\"ql-size-large\">,&nbsp;</span><a href=\"https://course.rs/practice/third-party-libs.html#%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">性能优化</a></li><li><a href=\"https://course.rs/practice/third-party-libs.html#%E7%B2%BE%E9%80%89%E4%B8%AD%E6%96%87%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">精选中文学习资料</a></li><li><a href=\"https://course.rs/practice/third-party-libs.html#%E7%B2%BE%E9%80%89Rust%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">精选Rust开源项目</a></li></ul><h2><br></h2><h2><br></h2><h2><a href=\"https://course.rs/practice/third-party-libs.html#%E6%97%A5%E5%B8%B8%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8rust%E5%BA%93\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">日常开发常用Rust库</a></h2><p><br></p><p><br></p><p><br></p><p><br></p><h3><a href=\"https://course.rs/practice/third-party-libs.html#webhttp\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">Web/HTTP</a></h3><ul><li><span class=\"ql-size-large\">HTTP客户端</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/seanmonstar/reqwest\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">reqwest</a><span class=\"ql-size-large\">&nbsp;一个简单又强大的HTTP客户端，</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">reqwest</code><span class=\"ql-size-large\">是目前使用最多的HTTP库</span></li><li><span class=\"ql-size-large\">Web框架</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/tokio-rs/axum\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">axum</a><span class=\"ql-size-large\">&nbsp;基于Tokio和Hyper打造，模块化设计较好，目前口碑很好，值得使用Ergonomic and modular web framework built with Tokio, Tower, and Hyper</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/SergioBenitez/Rocket\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">Rocket</a><span class=\"ql-size-large\">&nbsp;功能强大，API简单的Web框架，但是主要开发者目前因为个人原因无法进行后续开发，未来存在不确定性</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/actix/actix-web\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">actix-web</a><span class=\"ql-size-large\">&nbsp;性能极高的Web框架，就是团队内部有些问题，未来存在一定的不确定性</span></li><li class=\"ql-indent-1\"><span class=\"ql-size-large\">总体来说，上述三个web框架都有很深的用户基础，其实都可以选用，如果让我推荐，顺序如下:&nbsp;</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">axum</code><span class=\"ql-size-large\">&nbsp;&gt;&nbsp;</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">Rocket</code><span class=\"ql-size-large\">&nbsp;&gt;&nbsp;</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">actix-web</code><span class=\"ql-size-large\">。 不过如果你不需要多么完善的web功能，只需要一个性能极高的http库，那么</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">actix-web</code><span class=\"ql-size-large\">是非常好的选择，它的性能非常非常非常高！</span></li></ul><h3><a href=\"https://course.rs/practice/third-party-libs.html#%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">日志监控</a></h3><ul><li><span class=\"ql-size-large\">日志 [</span><a href=\"https://crates.io/keywords/log\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">crates.io</a><span class=\"ql-size-large\">] [</span><a href=\"https://github.com/search?q=rust+log\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">github</a><span class=\"ql-size-large\">]</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/tokio-rs/tracing\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">tokio-rs/tracing</a><span class=\"ql-size-large\">&nbsp;强大的日志框架，同时还支持OpenTelemetry格式，无缝打通未来的监控</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/rust-lang/log\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">rust-lang/log</a><span class=\"ql-size-large\">&nbsp;官方日志库，事实上的API标准, 但是三方库未必遵循</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/estk/log4rs\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">estk/log4rs</a><span class=\"ql-size-large\">&nbsp;模仿JAVA&nbsp;</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">logback</code><span class=\"ql-size-large\">和</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">log4j</code><span class=\"ql-size-large\">实现的日志库, 可配置性较强</span></li><li class=\"ql-indent-1\"><span class=\"ql-size-large\">在其它文章中，也许会推荐slog，但是我们不推荐，一个是因为近半年未更新，一个是</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">slog</code><span class=\"ql-size-large\">自己也推荐使用</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">tracing</code><span class=\"ql-size-large\">。</span></li><li><span class=\"ql-size-large\">监控</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/open-telemetry/opentelemetry-rust\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">OpenTelemetry</a><span class=\"ql-size-large\">&nbsp;</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">OpenTelemetry</code><span class=\"ql-size-large\">是现在非常火的可观测性解决方案，提供了协议、API、SDK等核心工具，用于收集监控数据，最后将这些metrics/logs/traces数据写入到</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">prometheus</code><span class=\"ql-size-large\">,&nbsp;</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">jaeger</code><span class=\"ql-size-large\">等监控平台中。最主要是，它后台很硬，后面有各大公司作为背书，未来非常看好！</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/vectordotdev/vector\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">vectordotdev/vector</a><span class=\"ql-size-large\">&nbsp;一个性能很高的数据采集agent，采集本地的日志、监控等数据，发送到远程的kafka、jaeger等数据下沉端，它最大的优点就是能从多种数据源(包括Opentelemetry)收集数据，然后推送到多个数据处理或者存储等下沉端。</span></li></ul><h3><a href=\"https://course.rs/practice/third-party-libs.html#sql%E5%AE%A2%E6%88%B7%E7%AB%AF\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">SQL客户端</a></h3><ul><li><span class=\"ql-size-large\">通用</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/launchbadge/sqlx\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">launchbadge/sqlx</a><span class=\"ql-size-large\">&nbsp;异步实现、高性能、纯Rust代码的SQL库，支持</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">PostgreSQL</code><span class=\"ql-size-large\">,&nbsp;</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">MySQL</code><span class=\"ql-size-large\">,&nbsp;</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">SQLite</code><span class=\"ql-size-large\">,和&nbsp;</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">MSSQL</code><span class=\"ql-size-large\">.</span></li><li><span class=\"ql-size-large\">ORM</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/rbatis/rbatis\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">rbatis/rbatis</a><span class=\"ql-size-large\">&nbsp;国内团队开发的ORM，异步、性能高、简单易上手</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/diesel-rs/diesel\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">diesel-rs/diesel</a><span class=\"ql-size-large\">&nbsp;安全、扩展性强的Rust ORM库，支持</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">Mysql</code><span class=\"ql-size-large\">、</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">Postgre</code><span class=\"ql-size-large\">、</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">SqlLite</code></li><li><span class=\"ql-size-large\">Mysql</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/blackbeam/rust-mysql-simple\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">blackbeam/rust-mysql-simple</a><span class=\"ql-size-large\">&nbsp;纯Rust实现的Mysql驱动,提供连接池</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/blackbeam/mysql_async\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">blackbeam/mysql_async</a><span class=\"ql-size-large\">&nbsp;基于Tokio实现的异步Mysql驱动</span></li><li class=\"ql-indent-1\"><span class=\"ql-size-large\">上面两个都是一个团队出品，前者文档更全、star更多，建议使用前者</span></li><li><span class=\"ql-size-large\">Postgre</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/sfackler/rust-postgres\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">sfackler/rust-postgres</a><span class=\"ql-size-large\">&nbsp;纯Rust实现的Postgre客户端</span></li><li><span class=\"ql-size-large\">Sqlite</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/rusqlite/rusqlite\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">rusqlite</a><span class=\"ql-size-large\">&nbsp;用于</span><a href=\"https://www.sqlite.org/index.html\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">Sqlite3</a><span class=\"ql-size-large\">的Rust客户端</span></li></ul><h3><a href=\"https://course.rs/practice/third-party-libs.html#nosql%E5%AE%A2%E6%88%B7%E7%AB%AF\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">NoSql客户端</a></h3><ul><li><span class=\"ql-size-large\">Redis</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/mitsuhiko/redis-rs\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">mitsuhiko/redis-rs</a><span class=\"ql-size-large\">&nbsp;虽然最近更新不太活跃，但是它依然是最好的redis客户端，说实话，我期待更好的，可能这也是Rust生态的未来可期之处吧</span></li><li><span class=\"ql-size-large\">Canssandra</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/krojew/cdrs-tokio\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">krojew/cdrs-tokio</a><span class=\"ql-size-large\">&nbsp;[</span><a href=\"https://crates.io/crates/cdrs-tokio\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">cdrs-tokio</a><span class=\"ql-size-large\">] 生产可用的Cassandra客户端，异步、纯Rust实现，就是个人项目 + star较少，未来不确定会不会不维护</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/scylladb/scylla-rust-driver\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">scylla-rust-driver</a><span class=\"ql-size-large\">&nbsp;ScyllaDB提供的官方库，支持cql协议，由于背靠大山，未来非常可期</span></li><li><span class=\"ql-size-large\">MongoDB</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/mongodb/mongo-rust-driver\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">mongodb/mongo-rust-driver</a><span class=\"ql-size-large\">&nbsp;官方MongoDB客户端，闭着眼睛选就对了</span></li></ul><h3><a href=\"https://course.rs/practice/third-party-libs.html#%E5%88%86%E5%B8%83%E5%BC%8F\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">分布式</a></h3><h4><a href=\"https://course.rs/practice/third-party-libs.html#%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">服务发现</a></h4><ul><li><a href=\"https://github.com/luncj/etcd-rs\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">luncj/etcd-rs</a><span class=\"ql-size-large\">&nbsp;异步实现的Rust etcd客户端，优点是有一定的文档、作者较为活跃,意味着你提问题他可能会回答，不过，如果你不放心，还是考虑使用HTTP的方式访问ETCD</span></li></ul><h4><a href=\"https://course.rs/practice/third-party-libs.html#%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">消息队列</a></h4><ul><li><span class=\"ql-size-large\">Kafka</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/fede1024/rust-rdkafka\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">fede1024/rust-rdkafka</a><span class=\"ql-size-large\">&nbsp;Rust Kafka客户端，基于C版本的Kafka库[librdkafka]实现，文档较全、功能较为全面</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/kafka-rust/kafka-rust\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">kafka-rust/kafka-rust</a><span class=\"ql-size-large\">&nbsp;相比上一个库，它算是纯Rust实现，文档还行，支持Kafka0.8.2及以后的版本，但是对于部分0.9版本的特性还不支持。同时有一个问题：最初的作者不维护了，转给了现在的作者，但是感觉好像也不是很活跃</span></li><li><span class=\"ql-size-large\">Nats</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/nats-io/nats.rs\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">nats-io/nats.rs</a><span class=\"ql-size-large\">&nbsp;Nats官方提供的客户端</span></li></ul><h3><a href=\"https://course.rs/practice/third-party-libs.html#%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">网络、通信协议</a></h3><ul><li><span class=\"ql-size-large\">Websocket</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/snapview/tokio-tungstenite\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">snapview/tokio-tungstenite</a><span class=\"ql-size-large\">&nbsp;更适合Web应用使用的生产级Websocket库，它是异步非阻塞的，基于下面的</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">tungstenite-rs</code><span class=\"ql-size-large\">库和tokio实现</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/websockets-rs/rust-websocket\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">rust-websocket</a><span class=\"ql-size-large\">&nbsp;老牌Websocket库，提供了客户端和服务器端实现，但是。。。很久没更新了</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/snapview/tungstenite-rs\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">snapview/tungstenite-rs</a><span class=\"ql-size-large\">&nbsp;轻量级的Websocket流实现，该库更偏底层，例如，你可以用来构建其它网络库</span></li><li><span class=\"ql-size-large\">gRPC</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/hyperium/tonic\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">hyperium/tonic</a><span class=\"ql-size-large\">&nbsp;纯Rust实现的gRPC客户端和服务器端，支持async/await异步调用，文档和示例较为清晰</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/tikv/grpc-rs\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">tikv/grpc-rs</a><span class=\"ql-size-large\">&nbsp;国产开源之光Tidb团队出品的gRPC框架, 基于C的代码实现, 就是最近好像不是很活跃</span></li><li class=\"ql-indent-1\"><span class=\"ql-size-large\">其实这两个实现都很优秀，把</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">tonic</code><span class=\"ql-size-large\">放在第一位，主要是因为它是纯Rust实现，同时社区也更为活跃，但是并不代表它比</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">tikv</code><span class=\"ql-size-large\">的更好！</span></li><li><span class=\"ql-size-large\">QUIC</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/cloudflare/quiche\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">cloudflare/quiche</a><span class=\"ql-size-large\">&nbsp;大名鼎鼎</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">cloudflare</code><span class=\"ql-size-large\">提供的QUIC实现，据说在公司内部重度使用，有了大规模生产级别的验证，非常值得信任，同时该库还实现了HTTP/3</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/quinn-rs/quinn\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">quinn-rs/quinn</a><span class=\"ql-size-large\">&nbsp;提供异步API调用，纯Rust实现，同时提供了几个有用的网络库</span></li><li><span class=\"ql-size-large\">MQTT</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/bytebeamio/rumqtt\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">bytebeamio/rumqtt</a><span class=\"ql-size-large\">&nbsp;MQTT3.1.1/5协议库，同时实现了客户端与服务器端broker</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/ntex-rs/ntex-mqtt\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">ntex-rs/ntex-mqtt</a><span class=\"ql-size-large\">&nbsp;客户端与服务端框架，支持MQTT3.1.1与5协议</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/eclipse/paho.mqtt.rust\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">eclipse/paho.mqtt.rust</a><span class=\"ql-size-large\">&nbsp;老牌MQTT框架，对MQTT支持较全, 其它各语言的实现也有</span></li></ul><h3><a href=\"https://course.rs/practice/third-party-libs.html#%E5%BC%82%E6%AD%A5%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">异步网络编程</a></h3><ul><li><a href=\"https://github.com/tokio-rs/tokio\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">tokio-rs/tokio</a><span class=\"ql-size-large\">&nbsp;最火的异步网络库，除了复杂上手难度高一些外，没有其它大的问题。同时tokio团队提供了多个非常优秀的Rust库，整个生态欣欣向荣，用户认可度很高</span></li><li><a href=\"https://async.rs/\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">async-std</a><span class=\"ql-size-large\">&nbsp;跟标准库API很像的异步网络库，相对简单易用，但是貌似开发有些停滞，还有就是功能上不够完善。但是对于普通用户来说，这个库非常值得一试，它在功能和简单易用上取得了很好的平衡</span></li><li><a href=\"https://github.com/actix/actix\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">actix</a><span class=\"ql-size-large\">&nbsp;基于Actor模型的异步网络库，但这个库的开发貌似已经停滞，他们团队一直在专注于</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">actix-web</code><span class=\"ql-size-large\">的开发</span></li><li><a href=\"https://github.com/tokio-rs/mio\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">mio</a><span class=\"ql-size-large\">&nbsp;严格来说，MIO与之前三个不是同一个用途的，MIO = Meta IO，是一个底层IO库，往往用于构建其它网络库，当然如果你对应用网络性能有非常极限的要求， 可以考虑它，因为它的层次比较低，所带来的抽象负担小，所以性能损耗小</span></li><li><span class=\"ql-size-large\">如果你要开发生产级别的项目，我推荐使用</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">tokio</code><span class=\"ql-size-large\">，稳定可靠，功能丰富，控制粒度细；自己的学习项目或者没有那么严肃的开源项目，我推荐</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">async-std</code><span class=\"ql-size-large\">，简单好用，值得学习；当你确切知道需要Actor网络模型时，就用</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">actix</code></li></ul><h3><a href=\"https://course.rs/practice/third-party-libs.html#%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">搜索引擎</a></h3><ul><li><span class=\"ql-size-large\">ElasticSearch客户端</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/elastic/elasticsearch-rs\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">elastic/elasticsearch</a><span class=\"ql-size-large\">&nbsp;官方es客户端，目前第三方的基本都处于停滞状态，所以不管好坏，用呗</span></li><li><span class=\"ql-size-large\">Rust搜索引擎</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/quickwit-inc/tantivy\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">Tantivy</a><span class=\"ql-size-large\">&nbsp;Tantivy是Rust实现的本地搜索库，功能对标</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">lucene</code><span class=\"ql-size-large\">，如果你不需要分布式，那么引入tantivy作为自己本地Rust服务的一个搜索，是相当不错的选择，该库作者一直很活跃，而且最近还创立了搜索引擎公司，感觉大有作为. 该库的优点在于纯Rust实现，性能高(lucene的2-3倍)，资源占用低(对比java自然不是一个数量级)，社区活跃。</span></li><li><span class=\"ql-size-large\">Rust搜索平台</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/quickwit-inc/quickwit\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">quickwit</a><span class=\"ql-size-large\">&nbsp;对标ElasticSearch，一个通用目的的分布式搜索平台，目前还在起步阶段(0.2版本)，未来非常可期，目前还不建议使用</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/meilisearch/MeiliSearch\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">MeiliSearch</a><span class=\"ql-size-large\">&nbsp;虽然也是一个搜索平台，但是并不是通用目的的，</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">MeiliSearch</code><span class=\"ql-size-large\">目标是为终端用户提供边输入边提示的即刻搜索功能，因此是一个轻量级搜索平台，不适用于数据量大时的搜索目的。总之，如果你需要在网页端或者APP为用户提供一个搜索条，然后支持输入容错、前缀搜索时，就可以使用它。</span></li></ul><h3><a href=\"https://course.rs/practice/third-party-libs.html#%E4%BB%A3%E7%A0%81debug\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">代码Debug</a></h3><ul><li><span class=\"ql-size-large\">GDB</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/cs01/gdbgui\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">gdbgui</a><span class=\"ql-size-large\">&nbsp;提供浏览器支持的gdb debug工具，支持C，C++，Rust和Go.</span></li><li><span class=\"ql-size-large\">LLDB</span></li><li class=\"ql-indent-1\"><a href=\"https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">CodeLLDB</a><span class=\"ql-size-large\">&nbsp;— 专门为VSCode设计的LLDB Debug扩展</span></li></ul><h3><a href=\"https://course.rs/practice/third-party-libs.html#%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">性能优化</a></h3><ul><li><a href=\"https://github.com/bheisler/criterion.rs\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">bheisler/criterion.rs</a><span class=\"ql-size-large\">&nbsp;比官方提供的benchmark库更好，目前已经成为事实上标准的性能测试工具</span></li><li><a href=\"https://github.com/koute/bytehound\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">Bytehound</a><span class=\"ql-size-large\">&nbsp;Linux下的内存分析工具，可以用来分析：内存泄漏、内存分配、调用栈追踪，甚至它还有一个浏览器UI! 懂的人都懂，性能测试工具的UI服务是多么稀缺和珍贵！</span></li><li><a href=\"https://github.com/llogiq/flame\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">llogiq/flame</a><span class=\"ql-size-large\">&nbsp;专为Rust打造的火焰图分析工具，可以告诉你程序在哪些代码上花费的时间过多，非常适合用于代码性能瓶颈的分析。与</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">perf</code><span class=\"ql-size-large\">不同，</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">flame</code><span class=\"ql-size-large\">库允许你自己定义想要测试的代码片段，只需要在代码前后加上相应的指令即可，非常好用</span></li><li><a href=\"https://github.com/sharkdp/hyperfine\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">sharkdp/hyperfine</a><span class=\"ql-size-large\">&nbsp;一个命令行benchmark工具，支持任意shell命令，支持缓存清除、预热、多次运行统计分析等，尽量保证结果的准确性</span></li></ul><h3><a href=\"https://course.rs/practice/third-party-libs.html#%E7%BC%96%E8%A7%A3%E7%A0%81\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">编解码</a></h3><ul><li><a href=\"https://github.com/serde-rs/serde\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">Serde</a><span class=\"ql-size-large\">&nbsp;一个超高性能的通用序列化/反序列化框架，可以跟多种协议的库联合使用，实现统一编解码格式</span></li><li><span class=\"ql-size-large\">CSV</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/BurntSushi/rust-csv\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">BurntSushi/rust-csv</a><span class=\"ql-size-large\">&nbsp;高性能CSV读写库，支持</span><a href=\"https://github.com/serde-rs/serde\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">Serde</a></li><li><span class=\"ql-size-large\">JSON</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/serde-rs/json\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">serde-rs/json</a><span class=\"ql-size-large\">&nbsp;快到上天的JSON库，也是Rust事实上的标准JSON库，你也可以使用它的大哥</span><a href=\"https://github.com/serde-rs/serde\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">serde</a><span class=\"ql-size-large\">，一个更通用的序列化/反序列化库</span></li><li><span class=\"ql-size-large\">MsgPack</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/3Hren/msgpack-rust\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">3Hren/msgpack-rust</a><span class=\"ql-size-large\">&nbsp;纯Rust实现的MessagePack编解码协议</span></li><li><span class=\"ql-size-large\">ProtocolBuffers</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/tokio-rs/prost\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">tokio-rs/prost</a><span class=\"ql-size-large\">&nbsp;tokio出品，基本都属精品，此库也不例外，简单易用，文档详细</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/stepancheg/rust-protobuf\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">stepancheg/rust-protobuf</a><span class=\"ql-size-large\">&nbsp;纯Rust实现</span></li><li><span class=\"ql-size-large\">TOML</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/alexcrichton/toml-rs\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">alexcrichton/toml-rs</a><span class=\"ql-size-large\">&nbsp;TOML编码/解码，可以配合</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">serde</code><span class=\"ql-size-large\">使用</span></li><li><span class=\"ql-size-large\">XML</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/tafia/quick-xml\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">tafia/quick-xml</a><span class=\"ql-size-large\">&nbsp;高性能XML库，可以配合</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">serde</code><span class=\"ql-size-large\">使用，文档较为详细</span></li><li><span class=\"ql-size-large\">YAML</span></li><li class=\"ql-indent-1\"><a href=\"https://github.com/dtolnay/serde-yaml\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">dtolnay/serde-yaml</a><span class=\"ql-size-large\">&nbsp;使用</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">serde</code><span class=\"ql-size-large\">编解码</span><code class=\"ql-size-large\" style=\"background-color: rgb(246, 247, 246); color: var(--inline-code-color);\">YAML</code><span class=\"ql-size-large\">格式的数据</span></li></ul><h3><a href=\"https://course.rs/practice/third-party-libs.html#email\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--fg);\">Email</a></h3><ul><li><a href=\"https://github.com/lettre/lettre\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-size-large\" style=\"color: var(--links);\">lettre/lettre</a><span class=\"ql-size-large\">&nbsp;— Rust SMTP库</span></li></ul>","applyCount":null,"linkUrl":null,"gradeLevel":null,"courseClasss":null}},"__N_SSG":true}