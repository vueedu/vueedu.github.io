{"pageProps":{"data":{"id":1172,"clientId":"450","clientName":null,"courseId":"129","typeId":"5","isSpecail":0,"title":"Rust区块链/智能合约开发专题班","type":3,"coverUrl":"https://ssl.cdn.maodouketang.com/FkC8M1DP1e3rplejUnfvsMZ64zcQ","teacher":"","startAt":null,"location":"线上","info":"{\"title\":\"企业展示区\",\"desc\":\"深圳北鲲云计算有限公司是一家专注于为有高算力需求的用户提供一站式Cloud-HPC产品和服务的高新技术企业。北鲲云拥有全球领先的Cloud-HPC SaaS平台，核心成员来自于Oracle、爱立信、IBM、华为等国际知名企业，拥有丰富的研发和企业服务管理经验。\",\"qrcodeTitle\":\"北鲲云计算诚招 Rust开发工程师<br/>20-40K*16薪（坐标深圳）\",\"qrcodeTitleLink\":\"https://www.lagou.com/wn/jobs/9922919.html\",\"qrcodeURL\":\"https://maodou-courseware-1257797626.cos.ap-beijing.myqcloud.com/origin/100041120/rust_qrcode.png\", \"mainScreenBgUrl\":\"https://ssl.cdn.maodouketang.com/FhIO5mgDwZcaZT3_LYzaEFDk_X3L\",\"mainScreenQrUrl\":\"https://rustedu.com/\"}","buyersCount":null,"price":"4800","tag":"hot","totalNum":null,"createdAt":null,"updatedAt":null,"roomId":"100450129","isDelete":1,"courseIndex":29,"oldPrice":"4800","ishd":240,"status":null,"summary":"NEAR 原生支持 WASM 合约，并且支持 Rust 语言和 AssemblyScript 开发智能合约。本课程讲述 Rust 合约的背景，以及如何基于 NEAR 链去创建一个简单的合约","showqr":null,"introduction":"<h2>用 Rust 开发智能合约</h2><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\"><span class=\"ql-size-large\">Rust 语言由 Mozilla 主导开发，程序编译后的运行速度惊人，且有相当高的内存利用率，并且支持函数式和面向对象的编程风格。也许很多同学还对 Rust 这门语言比较陌生。不过不用担心，本课程老师会跟大家一起拨开 Rust 的迷雾，让每个人都能利用 Rust 开发出高效，安全的智能合约。</span></p><p class=\"ql-align-justify\"><br></p><p><span class=\"ql-size-large\" style=\"color: rgb(0, 0, 0);\">随着 Ethereum 的普及，我们在谈论智能合约时，往往默认都是利用 Solidity 语言开发，基于 EVM 的智能合约。然而，由于 Ethereum 本身出块时间慢，交易所需手续费高的一些缺点，越来越多的优化技术和新的公链得以推出。而 WASM 则是其中的一个代表性技术。作为一种全新的二进制语法，WASM 有着诸多的优点，如指令体积小，运行速度快，并且内存安全。因此，运行在 WASM 上的智能合约可以大大减少占用的区块链资源，明显的提升出块速度和效率，并且运行时更加稳定，使得用户获得更好的使用体验。 WASM 支持多种不同的前端开发语言，包括 Rust、C、C++、TypeScript、AssemblyScript 等。考虑到适配以及工具链，并且语言本身的安全性，Rust 是非常好的选择之一。</span></p><p><br></p><p><span class=\"ql-size-large\" style=\"color: rgb(0, 0, 0);\">基于 Rust 和 WASM 的诸多优点，我们决定专门针对这一技术栈给大家带来一系列的分享，也希望大家可以持续的关注我们。我们调研了如今一些比较流行的公链项目，其中 NEAR 公链也采用了同样的技术栈。NEAR 原生支持 WASM 合约，并且支持 Rust 语言和 AssemblyScript 开发智能合约。因此，我们将以 NEAR 公链为基础，展开我们的分享与讨论。</span></p>","applyCount":null,"linkUrl":null,"gradeLevel":null,"courseClasss":null}},"__N_SSG":true}